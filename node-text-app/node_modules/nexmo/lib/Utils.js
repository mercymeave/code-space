"use strict";

var querystring = require("querystring");

exports.createPathWithQuery = function (path, query) {
  if (!query) {
    throw new Error('"query" is a required parameter');
  }

  var pathExt = "";

  if (typeof query === "string") {
    // single call Id
    pathExt = "/".concat(query);
  } else if (typeof query === "object" && Object.keys(query).length > 0) {
    // filter
    pathExt = "?".concat(querystring.stringify(query));
  }

  return "".concat(path).concat(pathExt);
};

exports.sendError = function (callback, err, returnData) {
  // Throw the error in case if there is no callback passed
  if (callback) {
    callback(err, returnData);
  } else {
    throw err;
  }
};

exports.clone = function (a) {
  return JSON.parse(JSON.stringify(a));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9VdGlscy5qcyJdLCJuYW1lcyI6WyJxdWVyeXN0cmluZyIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlUGF0aFdpdGhRdWVyeSIsInBhdGgiLCJxdWVyeSIsIkVycm9yIiwicGF0aEV4dCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJzdHJpbmdpZnkiLCJzZW5kRXJyb3IiLCJjYWxsYmFjayIsImVyciIsInJldHVybkRhdGEiLCJjbG9uZSIsImEiLCJKU09OIiwicGFyc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFFQUMsT0FBTyxDQUFDQyxtQkFBUixHQUE4QixVQUFTQyxJQUFULEVBQWVDLEtBQWYsRUFBc0I7QUFDbEQsTUFBSSxDQUFDQSxLQUFMLEVBQVk7QUFDVixVQUFNLElBQUlDLEtBQUosQ0FBVSxpQ0FBVixDQUFOO0FBQ0Q7O0FBRUQsTUFBSUMsT0FBTyxHQUFHLEVBQWQ7O0FBQ0EsTUFBSSxPQUFPRixLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCO0FBQ0FFLElBQUFBLE9BQU8sY0FBT0YsS0FBUCxDQUFQO0FBQ0QsR0FIRCxNQUdPLElBQUksT0FBT0EsS0FBUCxLQUFpQixRQUFqQixJQUE2QkcsTUFBTSxDQUFDQyxJQUFQLENBQVlKLEtBQVosRUFBbUJLLE1BQW5CLEdBQTRCLENBQTdELEVBQWdFO0FBQ3JFO0FBQ0FILElBQUFBLE9BQU8sY0FBT1AsV0FBVyxDQUFDVyxTQUFaLENBQXNCTixLQUF0QixDQUFQLENBQVA7QUFDRDs7QUFFRCxtQkFBVUQsSUFBVixTQUFpQkcsT0FBakI7QUFDRCxDQWZEOztBQWlCQUwsT0FBTyxDQUFDVSxTQUFSLEdBQW9CLFVBQVNDLFFBQVQsRUFBbUJDLEdBQW5CLEVBQXdCQyxVQUF4QixFQUFvQztBQUN0RDtBQUNBLE1BQUlGLFFBQUosRUFBYztBQUNaQSxJQUFBQSxRQUFRLENBQUNDLEdBQUQsRUFBTUMsVUFBTixDQUFSO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsVUFBTUQsR0FBTjtBQUNEO0FBQ0YsQ0FQRDs7QUFTQVosT0FBTyxDQUFDYyxLQUFSLEdBQWdCLFVBQVNDLENBQVQsRUFBWTtBQUMxQixTQUFPQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDUCxTQUFMLENBQWVNLENBQWYsQ0FBWCxDQUFQO0FBQ0QsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbInZhciBxdWVyeXN0cmluZyA9IHJlcXVpcmUoXCJxdWVyeXN0cmluZ1wiKTtcblxuZXhwb3J0cy5jcmVhdGVQYXRoV2l0aFF1ZXJ5ID0gZnVuY3Rpb24ocGF0aCwgcXVlcnkpIHtcbiAgaWYgKCFxdWVyeSkge1xuICAgIHRocm93IG5ldyBFcnJvcignXCJxdWVyeVwiIGlzIGEgcmVxdWlyZWQgcGFyYW1ldGVyJyk7XG4gIH1cblxuICB2YXIgcGF0aEV4dCA9IFwiXCI7XG4gIGlmICh0eXBlb2YgcXVlcnkgPT09IFwic3RyaW5nXCIpIHtcbiAgICAvLyBzaW5nbGUgY2FsbCBJZFxuICAgIHBhdGhFeHQgPSBgLyR7cXVlcnl9YDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcXVlcnkgPT09IFwib2JqZWN0XCIgJiYgT2JqZWN0LmtleXMocXVlcnkpLmxlbmd0aCA+IDApIHtcbiAgICAvLyBmaWx0ZXJcbiAgICBwYXRoRXh0ID0gYD8ke3F1ZXJ5c3RyaW5nLnN0cmluZ2lmeShxdWVyeSl9YDtcbiAgfVxuXG4gIHJldHVybiBgJHtwYXRofSR7cGF0aEV4dH1gO1xufTtcblxuZXhwb3J0cy5zZW5kRXJyb3IgPSBmdW5jdGlvbihjYWxsYmFjaywgZXJyLCByZXR1cm5EYXRhKSB7XG4gIC8vIFRocm93IHRoZSBlcnJvciBpbiBjYXNlIGlmIHRoZXJlIGlzIG5vIGNhbGxiYWNrIHBhc3NlZFxuICBpZiAoY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayhlcnIsIHJldHVybkRhdGEpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IGVycjtcbiAgfVxufTtcblxuZXhwb3J0cy5jbG9uZSA9IGZ1bmN0aW9uKGEpIHtcbiAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYSkpO1xufTtcbiJdfQ==